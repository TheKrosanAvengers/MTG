/*
 * This file is generated by jOOQ.
 */
package com.mtgjson.tables.records;


import com.mtgjson.tables.ForeignData;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ForeignDataRecord extends UpdatableRecordImpl<ForeignDataRecord> implements Record8<Integer, String, String, Integer, String, String, String, String> {

    private static final long serialVersionUID = -1593609368;

    /**
     * Setter for <code>foreign_data.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>foreign_data.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>foreign_data.flavorText</code>.
     */
    public void setFlavortext(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>foreign_data.flavorText</code>.
     */
    public String getFlavortext() {
        return (String) get(1);
    }

    /**
     * Setter for <code>foreign_data.language</code>.
     */
    public void setLanguage(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>foreign_data.language</code>.
     */
    public String getLanguage() {
        return (String) get(2);
    }

    /**
     * Setter for <code>foreign_data.multiverseId</code>.
     */
    public void setMultiverseid(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>foreign_data.multiverseId</code>.
     */
    public Integer getMultiverseid() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>foreign_data.name</code>.
     */
    public void setName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>foreign_data.name</code>.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>foreign_data.text</code>.
     */
    public void setText(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>foreign_data.text</code>.
     */
    public String getText() {
        return (String) get(5);
    }

    /**
     * Setter for <code>foreign_data.type</code>.
     */
    public void setType(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>foreign_data.type</code>.
     */
    public String getType() {
        return (String) get(6);
    }

    /**
     * Setter for <code>foreign_data.uuid</code>.
     */
    public void setUuid(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>foreign_data.uuid</code>.
     */
    public String getUuid() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, Integer, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, Integer, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ForeignData.FOREIGN_DATA.ID;
    }

    @Override
    public Field<String> field2() {
        return ForeignData.FOREIGN_DATA.FLAVORTEXT;
    }

    @Override
    public Field<String> field3() {
        return ForeignData.FOREIGN_DATA.LANGUAGE;
    }

    @Override
    public Field<Integer> field4() {
        return ForeignData.FOREIGN_DATA.MULTIVERSEID;
    }

    @Override
    public Field<String> field5() {
        return ForeignData.FOREIGN_DATA.NAME;
    }

    @Override
    public Field<String> field6() {
        return ForeignData.FOREIGN_DATA.TEXT;
    }

    @Override
    public Field<String> field7() {
        return ForeignData.FOREIGN_DATA.TYPE;
    }

    @Override
    public Field<String> field8() {
        return ForeignData.FOREIGN_DATA.UUID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFlavortext();
    }

    @Override
    public String component3() {
        return getLanguage();
    }

    @Override
    public Integer component4() {
        return getMultiverseid();
    }

    @Override
    public String component5() {
        return getName();
    }

    @Override
    public String component6() {
        return getText();
    }

    @Override
    public String component7() {
        return getType();
    }

    @Override
    public String component8() {
        return getUuid();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFlavortext();
    }

    @Override
    public String value3() {
        return getLanguage();
    }

    @Override
    public Integer value4() {
        return getMultiverseid();
    }

    @Override
    public String value5() {
        return getName();
    }

    @Override
    public String value6() {
        return getText();
    }

    @Override
    public String value7() {
        return getType();
    }

    @Override
    public String value8() {
        return getUuid();
    }

    @Override
    public ForeignDataRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ForeignDataRecord value2(String value) {
        setFlavortext(value);
        return this;
    }

    @Override
    public ForeignDataRecord value3(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public ForeignDataRecord value4(Integer value) {
        setMultiverseid(value);
        return this;
    }

    @Override
    public ForeignDataRecord value5(String value) {
        setName(value);
        return this;
    }

    @Override
    public ForeignDataRecord value6(String value) {
        setText(value);
        return this;
    }

    @Override
    public ForeignDataRecord value7(String value) {
        setType(value);
        return this;
    }

    @Override
    public ForeignDataRecord value8(String value) {
        setUuid(value);
        return this;
    }

    @Override
    public ForeignDataRecord values(Integer value1, String value2, String value3, Integer value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ForeignDataRecord
     */
    public ForeignDataRecord() {
        super(ForeignData.FOREIGN_DATA);
    }

    /**
     * Create a detached, initialised ForeignDataRecord
     */
    public ForeignDataRecord(Integer id, String flavortext, String language, Integer multiverseid, String name, String text, String type, String uuid) {
        super(ForeignData.FOREIGN_DATA);

        set(0, id);
        set(1, flavortext);
        set(2, language);
        set(3, multiverseid);
        set(4, name);
        set(5, text);
        set(6, type);
        set(7, uuid);
    }
}
