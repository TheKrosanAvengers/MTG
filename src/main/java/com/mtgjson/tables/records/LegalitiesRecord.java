/*
 * This file is generated by jOOQ.
 */
package com.mtgjson.tables.records;


import com.mtgjson.tables.Legalities;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LegalitiesRecord extends UpdatableRecordImpl<LegalitiesRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 1161071656;

    /**
     * Setter for <code>legalities.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>legalities.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>legalities.format</code>.
     */
    public void setFormat(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>legalities.format</code>.
     */
    public String getFormat() {
        return (String) get(1);
    }

    /**
     * Setter for <code>legalities.status</code>.
     */
    public void setStatus(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>legalities.status</code>.
     */
    public String getStatus() {
        return (String) get(2);
    }

    /**
     * Setter for <code>legalities.uuid</code>.
     */
    public void setUuid(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>legalities.uuid</code>.
     */
    public String getUuid() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Legalities.LEGALITIES.ID;
    }

    @Override
    public Field<String> field2() {
        return Legalities.LEGALITIES.FORMAT;
    }

    @Override
    public Field<String> field3() {
        return Legalities.LEGALITIES.STATUS;
    }

    @Override
    public Field<String> field4() {
        return Legalities.LEGALITIES.UUID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFormat();
    }

    @Override
    public String component3() {
        return getStatus();
    }

    @Override
    public String component4() {
        return getUuid();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFormat();
    }

    @Override
    public String value3() {
        return getStatus();
    }

    @Override
    public String value4() {
        return getUuid();
    }

    @Override
    public LegalitiesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public LegalitiesRecord value2(String value) {
        setFormat(value);
        return this;
    }

    @Override
    public LegalitiesRecord value3(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public LegalitiesRecord value4(String value) {
        setUuid(value);
        return this;
    }

    @Override
    public LegalitiesRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LegalitiesRecord
     */
    public LegalitiesRecord() {
        super(Legalities.LEGALITIES);
    }

    /**
     * Create a detached, initialised LegalitiesRecord
     */
    public LegalitiesRecord(Integer id, String format, String status, String uuid) {
        super(Legalities.LEGALITIES);

        set(0, id);
        set(1, format);
        set(2, status);
        set(3, uuid);
    }
}
