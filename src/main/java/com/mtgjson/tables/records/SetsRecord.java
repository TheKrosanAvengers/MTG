/*
 * This file is generated by jOOQ.
 */
package com.mtgjson.tables.records;


import com.mtgjson.tables.Sets;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record21;
import org.jooq.Row21;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SetsRecord extends UpdatableRecordImpl<SetsRecord> implements Record21<Integer, Integer, String, String, String, String, Integer, Integer, Integer, Integer, String, Integer, String, String, String, String, String, String, Integer, Integer, String> {

    private static final long serialVersionUID = 2078567670;

    /**
     * Setter for <code>sets.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>sets.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sets.baseSetSize</code>.
     */
    public void setBasesetsize(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>sets.baseSetSize</code>.
     */
    public Integer getBasesetsize() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>sets.block</code>.
     */
    public void setBlock(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>sets.block</code>.
     */
    public String getBlock() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sets.boosterV3</code>.
     */
    public void setBoosterv3(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>sets.boosterV3</code>.
     */
    public String getBoosterv3() {
        return (String) get(3);
    }

    /**
     * Setter for <code>sets.code</code>.
     */
    public void setCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>sets.code</code>.
     */
    public String getCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>sets.codeV3</code>.
     */
    public void setCodev3(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>sets.codeV3</code>.
     */
    public String getCodev3() {
        return (String) get(5);
    }

    /**
     * Setter for <code>sets.isFoilOnly</code>.
     */
    public void setIsfoilonly(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>sets.isFoilOnly</code>.
     */
    public Integer getIsfoilonly() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>sets.isForeignOnly</code>.
     */
    public void setIsforeignonly(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>sets.isForeignOnly</code>.
     */
    public Integer getIsforeignonly() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>sets.isOnlineOnly</code>.
     */
    public void setIsonlineonly(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>sets.isOnlineOnly</code>.
     */
    public Integer getIsonlineonly() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>sets.isPartialPreview</code>.
     */
    public void setIspartialpreview(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>sets.isPartialPreview</code>.
     */
    public Integer getIspartialpreview() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>sets.keyruneCode</code>.
     */
    public void setKeyrunecode(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>sets.keyruneCode</code>.
     */
    public String getKeyrunecode() {
        return (String) get(10);
    }

    /**
     * Setter for <code>sets.mcmId</code>.
     */
    public void setMcmid(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>sets.mcmId</code>.
     */
    public Integer getMcmid() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>sets.mcmName</code>.
     */
    public void setMcmname(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>sets.mcmName</code>.
     */
    public String getMcmname() {
        return (String) get(12);
    }

    /**
     * Setter for <code>sets.meta</code>.
     */
    public void setMeta(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>sets.meta</code>.
     */
    public String getMeta() {
        return (String) get(13);
    }

    /**
     * Setter for <code>sets.mtgoCode</code>.
     */
    public void setMtgocode(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>sets.mtgoCode</code>.
     */
    public String getMtgocode() {
        return (String) get(14);
    }

    /**
     * Setter for <code>sets.name</code>.
     */
    public void setName(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>sets.name</code>.
     */
    public String getName() {
        return (String) get(15);
    }

    /**
     * Setter for <code>sets.parentCode</code>.
     */
    public void setParentcode(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>sets.parentCode</code>.
     */
    public String getParentcode() {
        return (String) get(16);
    }

    /**
     * Setter for <code>sets.releaseDate</code>.
     */
    public void setReleasedate(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>sets.releaseDate</code>.
     */
    public String getReleasedate() {
        return (String) get(17);
    }

    /**
     * Setter for <code>sets.tcgplayerGroupId</code>.
     */
    public void setTcgplayergroupid(Integer value) {
        set(18, value);
    }

    /**
     * Getter for <code>sets.tcgplayerGroupId</code>.
     */
    public Integer getTcgplayergroupid() {
        return (Integer) get(18);
    }

    /**
     * Setter for <code>sets.totalSetSize</code>.
     */
    public void setTotalsetsize(Integer value) {
        set(19, value);
    }

    /**
     * Getter for <code>sets.totalSetSize</code>.
     */
    public Integer getTotalsetsize() {
        return (Integer) get(19);
    }

    /**
     * Setter for <code>sets.type</code>.
     */
    public void setType(String value) {
        set(20, value);
    }

    /**
     * Getter for <code>sets.type</code>.
     */
    public String getType() {
        return (String) get(20);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record21 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row21<Integer, Integer, String, String, String, String, Integer, Integer, Integer, Integer, String, Integer, String, String, String, String, String, String, Integer, Integer, String> fieldsRow() {
        return (Row21) super.fieldsRow();
    }

    @Override
    public Row21<Integer, Integer, String, String, String, String, Integer, Integer, Integer, Integer, String, Integer, String, String, String, String, String, String, Integer, Integer, String> valuesRow() {
        return (Row21) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Sets.SETS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Sets.SETS.BASESETSIZE;
    }

    @Override
    public Field<String> field3() {
        return Sets.SETS.BLOCK;
    }

    @Override
    public Field<String> field4() {
        return Sets.SETS.BOOSTERV3;
    }

    @Override
    public Field<String> field5() {
        return Sets.SETS.CODE;
    }

    @Override
    public Field<String> field6() {
        return Sets.SETS.CODEV3;
    }

    @Override
    public Field<Integer> field7() {
        return Sets.SETS.ISFOILONLY;
    }

    @Override
    public Field<Integer> field8() {
        return Sets.SETS.ISFOREIGNONLY;
    }

    @Override
    public Field<Integer> field9() {
        return Sets.SETS.ISONLINEONLY;
    }

    @Override
    public Field<Integer> field10() {
        return Sets.SETS.ISPARTIALPREVIEW;
    }

    @Override
    public Field<String> field11() {
        return Sets.SETS.KEYRUNECODE;
    }

    @Override
    public Field<Integer> field12() {
        return Sets.SETS.MCMID;
    }

    @Override
    public Field<String> field13() {
        return Sets.SETS.MCMNAME;
    }

    @Override
    public Field<String> field14() {
        return Sets.SETS.META;
    }

    @Override
    public Field<String> field15() {
        return Sets.SETS.MTGOCODE;
    }

    @Override
    public Field<String> field16() {
        return Sets.SETS.NAME;
    }

    @Override
    public Field<String> field17() {
        return Sets.SETS.PARENTCODE;
    }

    @Override
    public Field<String> field18() {
        return Sets.SETS.RELEASEDATE;
    }

    @Override
    public Field<Integer> field19() {
        return Sets.SETS.TCGPLAYERGROUPID;
    }

    @Override
    public Field<Integer> field20() {
        return Sets.SETS.TOTALSETSIZE;
    }

    @Override
    public Field<String> field21() {
        return Sets.SETS.TYPE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getBasesetsize();
    }

    @Override
    public String component3() {
        return getBlock();
    }

    @Override
    public String component4() {
        return getBoosterv3();
    }

    @Override
    public String component5() {
        return getCode();
    }

    @Override
    public String component6() {
        return getCodev3();
    }

    @Override
    public Integer component7() {
        return getIsfoilonly();
    }

    @Override
    public Integer component8() {
        return getIsforeignonly();
    }

    @Override
    public Integer component9() {
        return getIsonlineonly();
    }

    @Override
    public Integer component10() {
        return getIspartialpreview();
    }

    @Override
    public String component11() {
        return getKeyrunecode();
    }

    @Override
    public Integer component12() {
        return getMcmid();
    }

    @Override
    public String component13() {
        return getMcmname();
    }

    @Override
    public String component14() {
        return getMeta();
    }

    @Override
    public String component15() {
        return getMtgocode();
    }

    @Override
    public String component16() {
        return getName();
    }

    @Override
    public String component17() {
        return getParentcode();
    }

    @Override
    public String component18() {
        return getReleasedate();
    }

    @Override
    public Integer component19() {
        return getTcgplayergroupid();
    }

    @Override
    public Integer component20() {
        return getTotalsetsize();
    }

    @Override
    public String component21() {
        return getType();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getBasesetsize();
    }

    @Override
    public String value3() {
        return getBlock();
    }

    @Override
    public String value4() {
        return getBoosterv3();
    }

    @Override
    public String value5() {
        return getCode();
    }

    @Override
    public String value6() {
        return getCodev3();
    }

    @Override
    public Integer value7() {
        return getIsfoilonly();
    }

    @Override
    public Integer value8() {
        return getIsforeignonly();
    }

    @Override
    public Integer value9() {
        return getIsonlineonly();
    }

    @Override
    public Integer value10() {
        return getIspartialpreview();
    }

    @Override
    public String value11() {
        return getKeyrunecode();
    }

    @Override
    public Integer value12() {
        return getMcmid();
    }

    @Override
    public String value13() {
        return getMcmname();
    }

    @Override
    public String value14() {
        return getMeta();
    }

    @Override
    public String value15() {
        return getMtgocode();
    }

    @Override
    public String value16() {
        return getName();
    }

    @Override
    public String value17() {
        return getParentcode();
    }

    @Override
    public String value18() {
        return getReleasedate();
    }

    @Override
    public Integer value19() {
        return getTcgplayergroupid();
    }

    @Override
    public Integer value20() {
        return getTotalsetsize();
    }

    @Override
    public String value21() {
        return getType();
    }

    @Override
    public SetsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SetsRecord value2(Integer value) {
        setBasesetsize(value);
        return this;
    }

    @Override
    public SetsRecord value3(String value) {
        setBlock(value);
        return this;
    }

    @Override
    public SetsRecord value4(String value) {
        setBoosterv3(value);
        return this;
    }

    @Override
    public SetsRecord value5(String value) {
        setCode(value);
        return this;
    }

    @Override
    public SetsRecord value6(String value) {
        setCodev3(value);
        return this;
    }

    @Override
    public SetsRecord value7(Integer value) {
        setIsfoilonly(value);
        return this;
    }

    @Override
    public SetsRecord value8(Integer value) {
        setIsforeignonly(value);
        return this;
    }

    @Override
    public SetsRecord value9(Integer value) {
        setIsonlineonly(value);
        return this;
    }

    @Override
    public SetsRecord value10(Integer value) {
        setIspartialpreview(value);
        return this;
    }

    @Override
    public SetsRecord value11(String value) {
        setKeyrunecode(value);
        return this;
    }

    @Override
    public SetsRecord value12(Integer value) {
        setMcmid(value);
        return this;
    }

    @Override
    public SetsRecord value13(String value) {
        setMcmname(value);
        return this;
    }

    @Override
    public SetsRecord value14(String value) {
        setMeta(value);
        return this;
    }

    @Override
    public SetsRecord value15(String value) {
        setMtgocode(value);
        return this;
    }

    @Override
    public SetsRecord value16(String value) {
        setName(value);
        return this;
    }

    @Override
    public SetsRecord value17(String value) {
        setParentcode(value);
        return this;
    }

    @Override
    public SetsRecord value18(String value) {
        setReleasedate(value);
        return this;
    }

    @Override
    public SetsRecord value19(Integer value) {
        setTcgplayergroupid(value);
        return this;
    }

    @Override
    public SetsRecord value20(Integer value) {
        setTotalsetsize(value);
        return this;
    }

    @Override
    public SetsRecord value21(String value) {
        setType(value);
        return this;
    }

    @Override
    public SetsRecord values(Integer value1, Integer value2, String value3, String value4, String value5, String value6, Integer value7, Integer value8, Integer value9, Integer value10, String value11, Integer value12, String value13, String value14, String value15, String value16, String value17, String value18, Integer value19, Integer value20, String value21) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SetsRecord
     */
    public SetsRecord() {
        super(Sets.SETS);
    }

    /**
     * Create a detached, initialised SetsRecord
     */
    public SetsRecord(Integer id, Integer basesetsize, String block, String boosterv3, String code, String codev3, Integer isfoilonly, Integer isforeignonly, Integer isonlineonly, Integer ispartialpreview, String keyrunecode, Integer mcmid, String mcmname, String meta, String mtgocode, String name, String parentcode, String releasedate, Integer tcgplayergroupid, Integer totalsetsize, String type) {
        super(Sets.SETS);

        set(0, id);
        set(1, basesetsize);
        set(2, block);
        set(3, boosterv3);
        set(4, code);
        set(5, codev3);
        set(6, isfoilonly);
        set(7, isforeignonly);
        set(8, isonlineonly);
        set(9, ispartialpreview);
        set(10, keyrunecode);
        set(11, mcmid);
        set(12, mcmname);
        set(13, meta);
        set(14, mtgocode);
        set(15, name);
        set(16, parentcode);
        set(17, releasedate);
        set(18, tcgplayergroupid);
        set(19, totalsetsize);
        set(20, type);
    }
}
