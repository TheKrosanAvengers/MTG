/*
 * This file is generated by jOOQ.
 */
package com.cards.public_.tables.records;


import com.cards.public_.tables.Cardnonstaticabilities;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardnonstaticabilitiesRecord extends UpdatableRecordImpl<CardnonstaticabilitiesRecord> implements Record4<Long, Long, Long, String> {

    private static final long serialVersionUID = -231590438;

    /**
     * Setter for <code>PUBLIC.CARDNONSTATICABILITIES.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.CARDNONSTATICABILITIES.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.CARDNONSTATICABILITIES.NONSTATICABILITY</code>.
     */
    public void setNonstaticability(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.CARDNONSTATICABILITIES.NONSTATICABILITY</code>.
     */
    public Long getNonstaticability() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>PUBLIC.CARDNONSTATICABILITIES.CARD</code>.
     */
    public void setCard(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.CARDNONSTATICABILITIES.CARD</code>.
     */
    public Long getCard() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>PUBLIC.CARDNONSTATICABILITIES.COST</code>.
     */
    public void setCost(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.CARDNONSTATICABILITIES.COST</code>.
     */
    public String getCost() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, Long, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, Long, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Cardnonstaticabilities.CARDNONSTATICABILITIES.ID;
    }

    @Override
    public Field<Long> field2() {
        return Cardnonstaticabilities.CARDNONSTATICABILITIES.NONSTATICABILITY;
    }

    @Override
    public Field<Long> field3() {
        return Cardnonstaticabilities.CARDNONSTATICABILITIES.CARD;
    }

    @Override
    public Field<String> field4() {
        return Cardnonstaticabilities.CARDNONSTATICABILITIES.COST;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getNonstaticability();
    }

    @Override
    public Long component3() {
        return getCard();
    }

    @Override
    public String component4() {
        return getCost();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getNonstaticability();
    }

    @Override
    public Long value3() {
        return getCard();
    }

    @Override
    public String value4() {
        return getCost();
    }

    @Override
    public CardnonstaticabilitiesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CardnonstaticabilitiesRecord value2(Long value) {
        setNonstaticability(value);
        return this;
    }

    @Override
    public CardnonstaticabilitiesRecord value3(Long value) {
        setCard(value);
        return this;
    }

    @Override
    public CardnonstaticabilitiesRecord value4(String value) {
        setCost(value);
        return this;
    }

    @Override
    public CardnonstaticabilitiesRecord values(Long value1, Long value2, Long value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CardnonstaticabilitiesRecord
     */
    public CardnonstaticabilitiesRecord() {
        super(Cardnonstaticabilities.CARDNONSTATICABILITIES);
    }

    /**
     * Create a detached, initialised CardnonstaticabilitiesRecord
     */
    public CardnonstaticabilitiesRecord(Long id, Long nonstaticability, Long card, String cost) {
        super(Cardnonstaticabilities.CARDNONSTATICABILITIES);

        set(0, id);
        set(1, nonstaticability);
        set(2, card);
        set(3, cost);
    }
}
