/*
 * This file is generated by jOOQ.
 */
package org.krosanavengers.mtg.jooq.mtgjson.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.krosanavengers.mtg.jooq.mtgjson.tables.Prices;
import org.krosanavengers.mtg.jooq.mtgjson.tables.records.PricesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PricesDao extends DAOImpl<PricesRecord, org.krosanavengers.mtg.jooq.mtgjson.tables.pojos.Prices, Integer> {

    /**
     * Create a new PricesDao without any configuration
     */
    public PricesDao() {
        super(Prices.PRICES, org.krosanavengers.mtg.jooq.mtgjson.tables.pojos.Prices.class);
    }

    /**
     * Create a new PricesDao with an attached configuration
     */
    public PricesDao(Configuration configuration) {
        super(Prices.PRICES, org.krosanavengers.mtg.jooq.mtgjson.tables.pojos.Prices.class, configuration);
    }

    @Override
    public Integer getId(org.krosanavengers.mtg.jooq.mtgjson.tables.pojos.Prices object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.krosanavengers.mtg.jooq.mtgjson.tables.pojos.Prices> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Prices.PRICES.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.krosanavengers.mtg.jooq.mtgjson.tables.pojos.Prices> fetchById(Integer... values) {
        return fetch(Prices.PRICES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.krosanavengers.mtg.jooq.mtgjson.tables.pojos.Prices fetchOneById(Integer value) {
        return fetchOne(Prices.PRICES.ID, value);
    }

    /**
     * Fetch records that have <code>date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.krosanavengers.mtg.jooq.mtgjson.tables.pojos.Prices> fetchRangeOfDate(String lowerInclusive, String upperInclusive) {
        return fetchRange(Prices.PRICES.DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>date IN (values)</code>
     */
    public List<org.krosanavengers.mtg.jooq.mtgjson.tables.pojos.Prices> fetchByDate(String... values) {
        return fetch(Prices.PRICES.DATE, values);
    }

    /**
     * Fetch records that have <code>price BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.krosanavengers.mtg.jooq.mtgjson.tables.pojos.Prices> fetchRangeOfPrice(Float lowerInclusive, Float upperInclusive) {
        return fetchRange(Prices.PRICES.PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>price IN (values)</code>
     */
    public List<org.krosanavengers.mtg.jooq.mtgjson.tables.pojos.Prices> fetchByPrice(Float... values) {
        return fetch(Prices.PRICES.PRICE, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.krosanavengers.mtg.jooq.mtgjson.tables.pojos.Prices> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Prices.PRICES.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<org.krosanavengers.mtg.jooq.mtgjson.tables.pojos.Prices> fetchByType(String... values) {
        return fetch(Prices.PRICES.TYPE, values);
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.krosanavengers.mtg.jooq.mtgjson.tables.pojos.Prices> fetchRangeOfUuid(String lowerInclusive, String upperInclusive) {
        return fetchRange(Prices.PRICES.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<org.krosanavengers.mtg.jooq.mtgjson.tables.pojos.Prices> fetchByUuid(String... values) {
        return fetch(Prices.PRICES.UUID, values);
    }
}
