/*
 * This file is generated by jOOQ.
 */
package org.krosanavengers.mtg.jooq.mtgjson;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.krosanavengers.mtg.jooq.mtgjson.tables.Cards;
import org.krosanavengers.mtg.jooq.mtgjson.tables.ForeignData;
import org.krosanavengers.mtg.jooq.mtgjson.tables.Legalities;
import org.krosanavengers.mtg.jooq.mtgjson.tables.Prices;
import org.krosanavengers.mtg.jooq.mtgjson.tables.Rulings;
import org.krosanavengers.mtg.jooq.mtgjson.tables.SetTranslations;
import org.krosanavengers.mtg.jooq.mtgjson.tables.Sets;
import org.krosanavengers.mtg.jooq.mtgjson.tables.Tokens;
import org.krosanavengers.mtg.jooq.mtgjson.tables.records.CardsRecord;
import org.krosanavengers.mtg.jooq.mtgjson.tables.records.ForeignDataRecord;
import org.krosanavengers.mtg.jooq.mtgjson.tables.records.LegalitiesRecord;
import org.krosanavengers.mtg.jooq.mtgjson.tables.records.PricesRecord;
import org.krosanavengers.mtg.jooq.mtgjson.tables.records.RulingsRecord;
import org.krosanavengers.mtg.jooq.mtgjson.tables.records.SetTranslationsRecord;
import org.krosanavengers.mtg.jooq.mtgjson.tables.records.SetsRecord;
import org.krosanavengers.mtg.jooq.mtgjson.tables.records.TokensRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code></code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CardsRecord, Integer> IDENTITY_CARDS = Identities0.IDENTITY_CARDS;
    public static final Identity<ForeignDataRecord, Integer> IDENTITY_FOREIGN_DATA = Identities0.IDENTITY_FOREIGN_DATA;
    public static final Identity<LegalitiesRecord, Integer> IDENTITY_LEGALITIES = Identities0.IDENTITY_LEGALITIES;
    public static final Identity<PricesRecord, Integer> IDENTITY_PRICES = Identities0.IDENTITY_PRICES;
    public static final Identity<RulingsRecord, Integer> IDENTITY_RULINGS = Identities0.IDENTITY_RULINGS;
    public static final Identity<SetTranslationsRecord, Integer> IDENTITY_SET_TRANSLATIONS = Identities0.IDENTITY_SET_TRANSLATIONS;
    public static final Identity<SetsRecord, Integer> IDENTITY_SETS = Identities0.IDENTITY_SETS;
    public static final Identity<TokensRecord, Integer> IDENTITY_TOKENS = Identities0.IDENTITY_TOKENS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CardsRecord> PK_CARDS = UniqueKeys0.PK_CARDS;
    public static final UniqueKey<CardsRecord> SQLITE_AUTOINDEX_CARDS_1 = UniqueKeys0.SQLITE_AUTOINDEX_CARDS_1;
    public static final UniqueKey<ForeignDataRecord> PK_FOREIGN_DATA = UniqueKeys0.PK_FOREIGN_DATA;
    public static final UniqueKey<LegalitiesRecord> PK_LEGALITIES = UniqueKeys0.PK_LEGALITIES;
    public static final UniqueKey<PricesRecord> PK_PRICES = UniqueKeys0.PK_PRICES;
    public static final UniqueKey<RulingsRecord> PK_RULINGS = UniqueKeys0.PK_RULINGS;
    public static final UniqueKey<SetTranslationsRecord> PK_SET_TRANSLATIONS = UniqueKeys0.PK_SET_TRANSLATIONS;
    public static final UniqueKey<SetsRecord> PK_SETS = UniqueKeys0.PK_SETS;
    public static final UniqueKey<SetsRecord> SQLITE_AUTOINDEX_SETS_1 = UniqueKeys0.SQLITE_AUTOINDEX_SETS_1;
    public static final UniqueKey<TokensRecord> PK_TOKENS = UniqueKeys0.PK_TOKENS;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CardsRecord, SetsRecord> FK_CARDS_SETS_1 = ForeignKeys0.FK_CARDS_SETS_1;
    public static final ForeignKey<ForeignDataRecord, CardsRecord> FK_FOREIGN_DATA_CARDS_1 = ForeignKeys0.FK_FOREIGN_DATA_CARDS_1;
    public static final ForeignKey<LegalitiesRecord, CardsRecord> FK_LEGALITIES_CARDS_1 = ForeignKeys0.FK_LEGALITIES_CARDS_1;
    public static final ForeignKey<PricesRecord, CardsRecord> FK_PRICES_CARDS_1 = ForeignKeys0.FK_PRICES_CARDS_1;
    public static final ForeignKey<RulingsRecord, CardsRecord> FK_RULINGS_CARDS_1 = ForeignKeys0.FK_RULINGS_CARDS_1;
    public static final ForeignKey<SetTranslationsRecord, SetsRecord> FK_SET_TRANSLATIONS_SETS_1 = ForeignKeys0.FK_SET_TRANSLATIONS_SETS_1;
    public static final ForeignKey<TokensRecord, SetsRecord> FK_TOKENS_SETS_1 = ForeignKeys0.FK_TOKENS_SETS_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CardsRecord, Integer> IDENTITY_CARDS = Internal.createIdentity(Cards.CARDS, Cards.CARDS.ID);
        public static Identity<ForeignDataRecord, Integer> IDENTITY_FOREIGN_DATA = Internal.createIdentity(ForeignData.FOREIGN_DATA, ForeignData.FOREIGN_DATA.ID);
        public static Identity<LegalitiesRecord, Integer> IDENTITY_LEGALITIES = Internal.createIdentity(Legalities.LEGALITIES, Legalities.LEGALITIES.ID);
        public static Identity<PricesRecord, Integer> IDENTITY_PRICES = Internal.createIdentity(Prices.PRICES, Prices.PRICES.ID);
        public static Identity<RulingsRecord, Integer> IDENTITY_RULINGS = Internal.createIdentity(Rulings.RULINGS, Rulings.RULINGS.ID);
        public static Identity<SetTranslationsRecord, Integer> IDENTITY_SET_TRANSLATIONS = Internal.createIdentity(SetTranslations.SET_TRANSLATIONS, SetTranslations.SET_TRANSLATIONS.ID);
        public static Identity<SetsRecord, Integer> IDENTITY_SETS = Internal.createIdentity(Sets.SETS, Sets.SETS.ID);
        public static Identity<TokensRecord, Integer> IDENTITY_TOKENS = Internal.createIdentity(Tokens.TOKENS, Tokens.TOKENS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CardsRecord> PK_CARDS = Internal.createUniqueKey(Cards.CARDS, "pk_cards", Cards.CARDS.ID);
        public static final UniqueKey<CardsRecord> SQLITE_AUTOINDEX_CARDS_1 = Internal.createUniqueKey(Cards.CARDS, "sqlite_autoindex_cards_1", Cards.CARDS.UUID);
        public static final UniqueKey<ForeignDataRecord> PK_FOREIGN_DATA = Internal.createUniqueKey(ForeignData.FOREIGN_DATA, "pk_foreign_data", ForeignData.FOREIGN_DATA.ID);
        public static final UniqueKey<LegalitiesRecord> PK_LEGALITIES = Internal.createUniqueKey(Legalities.LEGALITIES, "pk_legalities", Legalities.LEGALITIES.ID);
        public static final UniqueKey<PricesRecord> PK_PRICES = Internal.createUniqueKey(Prices.PRICES, "pk_prices", Prices.PRICES.ID);
        public static final UniqueKey<RulingsRecord> PK_RULINGS = Internal.createUniqueKey(Rulings.RULINGS, "pk_rulings", Rulings.RULINGS.ID);
        public static final UniqueKey<SetTranslationsRecord> PK_SET_TRANSLATIONS = Internal.createUniqueKey(SetTranslations.SET_TRANSLATIONS, "pk_set_translations", SetTranslations.SET_TRANSLATIONS.ID);
        public static final UniqueKey<SetsRecord> PK_SETS = Internal.createUniqueKey(Sets.SETS, "pk_sets", Sets.SETS.ID);
        public static final UniqueKey<SetsRecord> SQLITE_AUTOINDEX_SETS_1 = Internal.createUniqueKey(Sets.SETS, "sqlite_autoindex_sets_1", Sets.SETS.CODE);
        public static final UniqueKey<TokensRecord> PK_TOKENS = Internal.createUniqueKey(Tokens.TOKENS, "pk_tokens", Tokens.TOKENS.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<CardsRecord, SetsRecord> FK_CARDS_SETS_1 = Internal.createForeignKey(org.krosanavengers.mtg.jooq.mtgjson.Keys.PK_SETS, Cards.CARDS, "fk_cards_sets_1", Cards.CARDS.SETCODE);
        public static final ForeignKey<ForeignDataRecord, CardsRecord> FK_FOREIGN_DATA_CARDS_1 = Internal.createForeignKey(org.krosanavengers.mtg.jooq.mtgjson.Keys.PK_CARDS, ForeignData.FOREIGN_DATA, "fk_foreign_data_cards_1", ForeignData.FOREIGN_DATA.UUID);
        public static final ForeignKey<LegalitiesRecord, CardsRecord> FK_LEGALITIES_CARDS_1 = Internal.createForeignKey(org.krosanavengers.mtg.jooq.mtgjson.Keys.PK_CARDS, Legalities.LEGALITIES, "fk_legalities_cards_1", Legalities.LEGALITIES.UUID);
        public static final ForeignKey<PricesRecord, CardsRecord> FK_PRICES_CARDS_1 = Internal.createForeignKey(org.krosanavengers.mtg.jooq.mtgjson.Keys.PK_CARDS, Prices.PRICES, "fk_prices_cards_1", Prices.PRICES.UUID);
        public static final ForeignKey<RulingsRecord, CardsRecord> FK_RULINGS_CARDS_1 = Internal.createForeignKey(org.krosanavengers.mtg.jooq.mtgjson.Keys.PK_CARDS, Rulings.RULINGS, "fk_rulings_cards_1", Rulings.RULINGS.UUID);
        public static final ForeignKey<SetTranslationsRecord, SetsRecord> FK_SET_TRANSLATIONS_SETS_1 = Internal.createForeignKey(org.krosanavengers.mtg.jooq.mtgjson.Keys.PK_SETS, SetTranslations.SET_TRANSLATIONS, "fk_set_translations_sets_1", SetTranslations.SET_TRANSLATIONS.SETCODE);
        public static final ForeignKey<TokensRecord, SetsRecord> FK_TOKENS_SETS_1 = Internal.createForeignKey(org.krosanavengers.mtg.jooq.mtgjson.Keys.PK_SETS, Tokens.TOKENS, "fk_tokens_sets_1", Tokens.TOKENS.SETCODE);
    }
}
