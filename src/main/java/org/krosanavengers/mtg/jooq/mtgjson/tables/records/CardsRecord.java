/*
 * This file is generated by jOOQ.
 */
package org.krosanavengers.mtg.jooq.mtgjson.tables.records;


import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.krosanavengers.mtg.jooq.mtgjson.tables.Cards;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardsRecord extends UpdatableRecordImpl<CardsRecord> {

    private static final long serialVersionUID = -906420800;

    /**
     * Setter for <code>cards.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>cards.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>cards.artist</code>.
     */
    public void setArtist(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cards.artist</code>.
     */
    public String getArtist() {
        return (String) get(1);
    }

    /**
     * Setter for <code>cards.borderColor</code>.
     */
    public void setBordercolor(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>cards.borderColor</code>.
     */
    public String getBordercolor() {
        return (String) get(2);
    }

    /**
     * Setter for <code>cards.colorIdentity</code>.
     */
    public void setColoridentity(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>cards.colorIdentity</code>.
     */
    public String getColoridentity() {
        return (String) get(3);
    }

    /**
     * Setter for <code>cards.colorIndicator</code>.
     */
    public void setColorindicator(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>cards.colorIndicator</code>.
     */
    public String getColorindicator() {
        return (String) get(4);
    }

    /**
     * Setter for <code>cards.colors</code>.
     */
    public void setColors(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>cards.colors</code>.
     */
    public String getColors() {
        return (String) get(5);
    }

    /**
     * Setter for <code>cards.convertedManaCost</code>.
     */
    public void setConvertedmanacost(Float value) {
        set(6, value);
    }

    /**
     * Getter for <code>cards.convertedManaCost</code>.
     */
    public Float getConvertedmanacost() {
        return (Float) get(6);
    }

    /**
     * Setter for <code>cards.duelDeck</code>.
     */
    public void setDueldeck(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>cards.duelDeck</code>.
     */
    public String getDueldeck() {
        return (String) get(7);
    }

    /**
     * Setter for <code>cards.edhrecRank</code>.
     */
    public void setEdhrecrank(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>cards.edhrecRank</code>.
     */
    public String getEdhrecrank() {
        return (String) get(8);
    }

    /**
     * Setter for <code>cards.faceConvertedManaCost</code>.
     */
    public void setFaceconvertedmanacost(Float value) {
        set(9, value);
    }

    /**
     * Getter for <code>cards.faceConvertedManaCost</code>.
     */
    public Float getFaceconvertedmanacost() {
        return (Float) get(9);
    }

    /**
     * Setter for <code>cards.flavorText</code>.
     */
    public void setFlavortext(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>cards.flavorText</code>.
     */
    public String getFlavortext() {
        return (String) get(10);
    }

    /**
     * Setter for <code>cards.frameEffect</code>.
     */
    public void setFrameeffect(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>cards.frameEffect</code>.
     */
    public String getFrameeffect() {
        return (String) get(11);
    }

    /**
     * Setter for <code>cards.frameEffects</code>.
     */
    public void setFrameeffects(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>cards.frameEffects</code>.
     */
    public String getFrameeffects() {
        return (String) get(12);
    }

    /**
     * Setter for <code>cards.frameVersion</code>.
     */
    public void setFrameversion(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>cards.frameVersion</code>.
     */
    public String getFrameversion() {
        return (String) get(13);
    }

    /**
     * Setter for <code>cards.hand</code>.
     */
    public void setHand(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>cards.hand</code>.
     */
    public String getHand() {
        return (String) get(14);
    }

    /**
     * Setter for <code>cards.hasFoil</code>.
     */
    public void setHasfoil(Integer value) {
        set(15, value);
    }

    /**
     * Getter for <code>cards.hasFoil</code>.
     */
    public Integer getHasfoil() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>cards.hasNoDeckLimit</code>.
     */
    public void setHasnodecklimit(Integer value) {
        set(16, value);
    }

    /**
     * Getter for <code>cards.hasNoDeckLimit</code>.
     */
    public Integer getHasnodecklimit() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>cards.hasNonFoil</code>.
     */
    public void setHasnonfoil(Integer value) {
        set(17, value);
    }

    /**
     * Getter for <code>cards.hasNonFoil</code>.
     */
    public Integer getHasnonfoil() {
        return (Integer) get(17);
    }

    /**
     * Setter for <code>cards.isAlternative</code>.
     */
    public void setIsalternative(Integer value) {
        set(18, value);
    }

    /**
     * Getter for <code>cards.isAlternative</code>.
     */
    public Integer getIsalternative() {
        return (Integer) get(18);
    }

    /**
     * Setter for <code>cards.isArena</code>.
     */
    public void setIsarena(Integer value) {
        set(19, value);
    }

    /**
     * Getter for <code>cards.isArena</code>.
     */
    public Integer getIsarena() {
        return (Integer) get(19);
    }

    /**
     * Setter for <code>cards.isFullArt</code>.
     */
    public void setIsfullart(Integer value) {
        set(20, value);
    }

    /**
     * Getter for <code>cards.isFullArt</code>.
     */
    public Integer getIsfullart() {
        return (Integer) get(20);
    }

    /**
     * Setter for <code>cards.isMtgo</code>.
     */
    public void setIsmtgo(Integer value) {
        set(21, value);
    }

    /**
     * Getter for <code>cards.isMtgo</code>.
     */
    public Integer getIsmtgo() {
        return (Integer) get(21);
    }

    /**
     * Setter for <code>cards.isOnlineOnly</code>.
     */
    public void setIsonlineonly(Integer value) {
        set(22, value);
    }

    /**
     * Getter for <code>cards.isOnlineOnly</code>.
     */
    public Integer getIsonlineonly() {
        return (Integer) get(22);
    }

    /**
     * Setter for <code>cards.isOversized</code>.
     */
    public void setIsoversized(Integer value) {
        set(23, value);
    }

    /**
     * Getter for <code>cards.isOversized</code>.
     */
    public Integer getIsoversized() {
        return (Integer) get(23);
    }

    /**
     * Setter for <code>cards.isPaper</code>.
     */
    public void setIspaper(Integer value) {
        set(24, value);
    }

    /**
     * Getter for <code>cards.isPaper</code>.
     */
    public Integer getIspaper() {
        return (Integer) get(24);
    }

    /**
     * Setter for <code>cards.isPromo</code>.
     */
    public void setIspromo(Integer value) {
        set(25, value);
    }

    /**
     * Getter for <code>cards.isPromo</code>.
     */
    public Integer getIspromo() {
        return (Integer) get(25);
    }

    /**
     * Setter for <code>cards.isReprint</code>.
     */
    public void setIsreprint(Integer value) {
        set(26, value);
    }

    /**
     * Getter for <code>cards.isReprint</code>.
     */
    public Integer getIsreprint() {
        return (Integer) get(26);
    }

    /**
     * Setter for <code>cards.isReserved</code>.
     */
    public void setIsreserved(Integer value) {
        set(27, value);
    }

    /**
     * Getter for <code>cards.isReserved</code>.
     */
    public Integer getIsreserved() {
        return (Integer) get(27);
    }

    /**
     * Setter for <code>cards.isStarter</code>.
     */
    public void setIsstarter(Integer value) {
        set(28, value);
    }

    /**
     * Getter for <code>cards.isStarter</code>.
     */
    public Integer getIsstarter() {
        return (Integer) get(28);
    }

    /**
     * Setter for <code>cards.isStorySpotlight</code>.
     */
    public void setIsstoryspotlight(Integer value) {
        set(29, value);
    }

    /**
     * Getter for <code>cards.isStorySpotlight</code>.
     */
    public Integer getIsstoryspotlight() {
        return (Integer) get(29);
    }

    /**
     * Setter for <code>cards.isTextless</code>.
     */
    public void setIstextless(Integer value) {
        set(30, value);
    }

    /**
     * Getter for <code>cards.isTextless</code>.
     */
    public Integer getIstextless() {
        return (Integer) get(30);
    }

    /**
     * Setter for <code>cards.isTimeshifted</code>.
     */
    public void setIstimeshifted(Integer value) {
        set(31, value);
    }

    /**
     * Getter for <code>cards.isTimeshifted</code>.
     */
    public Integer getIstimeshifted() {
        return (Integer) get(31);
    }

    /**
     * Setter for <code>cards.layout</code>.
     */
    public void setLayout(String value) {
        set(32, value);
    }

    /**
     * Getter for <code>cards.layout</code>.
     */
    public String getLayout() {
        return (String) get(32);
    }

    /**
     * Setter for <code>cards.leadershipSkills</code>.
     */
    public void setLeadershipskills(String value) {
        set(33, value);
    }

    /**
     * Getter for <code>cards.leadershipSkills</code>.
     */
    public String getLeadershipskills() {
        return (String) get(33);
    }

    /**
     * Setter for <code>cards.life</code>.
     */
    public void setLife(String value) {
        set(34, value);
    }

    /**
     * Getter for <code>cards.life</code>.
     */
    public String getLife() {
        return (String) get(34);
    }

    /**
     * Setter for <code>cards.loyalty</code>.
     */
    public void setLoyalty(String value) {
        set(35, value);
    }

    /**
     * Getter for <code>cards.loyalty</code>.
     */
    public String getLoyalty() {
        return (String) get(35);
    }

    /**
     * Setter for <code>cards.manaCost</code>.
     */
    public void setManacost(String value) {
        set(36, value);
    }

    /**
     * Getter for <code>cards.manaCost</code>.
     */
    public String getManacost() {
        return (String) get(36);
    }

    /**
     * Setter for <code>cards.mcmId</code>.
     */
    public void setMcmid(Integer value) {
        set(37, value);
    }

    /**
     * Getter for <code>cards.mcmId</code>.
     */
    public Integer getMcmid() {
        return (Integer) get(37);
    }

    /**
     * Setter for <code>cards.mcmMetaId</code>.
     */
    public void setMcmmetaid(Integer value) {
        set(38, value);
    }

    /**
     * Getter for <code>cards.mcmMetaId</code>.
     */
    public Integer getMcmmetaid() {
        return (Integer) get(38);
    }

    /**
     * Setter for <code>cards.mcmName</code>.
     */
    public void setMcmname(String value) {
        set(39, value);
    }

    /**
     * Getter for <code>cards.mcmName</code>.
     */
    public String getMcmname() {
        return (String) get(39);
    }

    /**
     * Setter for <code>cards.mtgArenaId</code>.
     */
    public void setMtgarenaid(Integer value) {
        set(40, value);
    }

    /**
     * Getter for <code>cards.mtgArenaId</code>.
     */
    public Integer getMtgarenaid() {
        return (Integer) get(40);
    }

    /**
     * Setter for <code>cards.mtgoFoilId</code>.
     */
    public void setMtgofoilid(Integer value) {
        set(41, value);
    }

    /**
     * Getter for <code>cards.mtgoFoilId</code>.
     */
    public Integer getMtgofoilid() {
        return (Integer) get(41);
    }

    /**
     * Setter for <code>cards.mtgoId</code>.
     */
    public void setMtgoid(Integer value) {
        set(42, value);
    }

    /**
     * Getter for <code>cards.mtgoId</code>.
     */
    public Integer getMtgoid() {
        return (Integer) get(42);
    }

    /**
     * Setter for <code>cards.mtgstocksId</code>.
     */
    public void setMtgstocksid(Integer value) {
        set(43, value);
    }

    /**
     * Getter for <code>cards.mtgstocksId</code>.
     */
    public Integer getMtgstocksid() {
        return (Integer) get(43);
    }

    /**
     * Setter for <code>cards.multiverseId</code>.
     */
    public void setMultiverseid(Integer value) {
        set(44, value);
    }

    /**
     * Getter for <code>cards.multiverseId</code>.
     */
    public Integer getMultiverseid() {
        return (Integer) get(44);
    }

    /**
     * Setter for <code>cards.name</code>.
     */
    public void setName(String value) {
        set(45, value);
    }

    /**
     * Getter for <code>cards.name</code>.
     */
    public String getName() {
        return (String) get(45);
    }

    /**
     * Setter for <code>cards.names</code>.
     */
    public void setNames(String value) {
        set(46, value);
    }

    /**
     * Getter for <code>cards.names</code>.
     */
    public String getNames() {
        return (String) get(46);
    }

    /**
     * Setter for <code>cards.number</code>.
     */
    public void setNumber(String value) {
        set(47, value);
    }

    /**
     * Getter for <code>cards.number</code>.
     */
    public String getNumber() {
        return (String) get(47);
    }

    /**
     * Setter for <code>cards.originalText</code>.
     */
    public void setOriginaltext(String value) {
        set(48, value);
    }

    /**
     * Getter for <code>cards.originalText</code>.
     */
    public String getOriginaltext() {
        return (String) get(48);
    }

    /**
     * Setter for <code>cards.originalType</code>.
     */
    public void setOriginaltype(String value) {
        set(49, value);
    }

    /**
     * Getter for <code>cards.originalType</code>.
     */
    public String getOriginaltype() {
        return (String) get(49);
    }

    /**
     * Setter for <code>cards.otherFaceIds</code>.
     */
    public void setOtherfaceids(String value) {
        set(50, value);
    }

    /**
     * Getter for <code>cards.otherFaceIds</code>.
     */
    public String getOtherfaceids() {
        return (String) get(50);
    }

    /**
     * Setter for <code>cards.power</code>.
     */
    public void setPower(String value) {
        set(51, value);
    }

    /**
     * Getter for <code>cards.power</code>.
     */
    public String getPower() {
        return (String) get(51);
    }

    /**
     * Setter for <code>cards.printings</code>.
     */
    public void setPrintings(String value) {
        set(52, value);
    }

    /**
     * Getter for <code>cards.printings</code>.
     */
    public String getPrintings() {
        return (String) get(52);
    }

    /**
     * Setter for <code>cards.purchaseUrls</code>.
     */
    public void setPurchaseurls(String value) {
        set(53, value);
    }

    /**
     * Getter for <code>cards.purchaseUrls</code>.
     */
    public String getPurchaseurls() {
        return (String) get(53);
    }

    /**
     * Setter for <code>cards.rarity</code>.
     */
    public void setRarity(String value) {
        set(54, value);
    }

    /**
     * Getter for <code>cards.rarity</code>.
     */
    public String getRarity() {
        return (String) get(54);
    }

    /**
     * Setter for <code>cards.scryfallId</code>.
     */
    public void setScryfallid(String value) {
        set(55, value);
    }

    /**
     * Getter for <code>cards.scryfallId</code>.
     */
    public String getScryfallid() {
        return (String) get(55);
    }

    /**
     * Setter for <code>cards.scryfallIllustrationId</code>.
     */
    public void setScryfallillustrationid(String value) {
        set(56, value);
    }

    /**
     * Getter for <code>cards.scryfallIllustrationId</code>.
     */
    public String getScryfallillustrationid() {
        return (String) get(56);
    }

    /**
     * Setter for <code>cards.scryfallOracleId</code>.
     */
    public void setScryfalloracleid(String value) {
        set(57, value);
    }

    /**
     * Getter for <code>cards.scryfallOracleId</code>.
     */
    public String getScryfalloracleid() {
        return (String) get(57);
    }

    /**
     * Setter for <code>cards.setCode</code>.
     */
    public void setSetcode(String value) {
        set(58, value);
    }

    /**
     * Getter for <code>cards.setCode</code>.
     */
    public String getSetcode() {
        return (String) get(58);
    }

    /**
     * Setter for <code>cards.side</code>.
     */
    public void setSide(String value) {
        set(59, value);
    }

    /**
     * Getter for <code>cards.side</code>.
     */
    public String getSide() {
        return (String) get(59);
    }

    /**
     * Setter for <code>cards.subtypes</code>.
     */
    public void setSubtypes(String value) {
        set(60, value);
    }

    /**
     * Getter for <code>cards.subtypes</code>.
     */
    public String getSubtypes() {
        return (String) get(60);
    }

    /**
     * Setter for <code>cards.supertypes</code>.
     */
    public void setSupertypes(String value) {
        set(61, value);
    }

    /**
     * Getter for <code>cards.supertypes</code>.
     */
    public String getSupertypes() {
        return (String) get(61);
    }

    /**
     * Setter for <code>cards.tcgplayerProductId</code>.
     */
    public void setTcgplayerproductid(Integer value) {
        set(62, value);
    }

    /**
     * Getter for <code>cards.tcgplayerProductId</code>.
     */
    public Integer getTcgplayerproductid() {
        return (Integer) get(62);
    }

    /**
     * Setter for <code>cards.tcgplayerPurchaseUrl</code>.
     */
    public void setTcgplayerpurchaseurl(String value) {
        set(63, value);
    }

    /**
     * Getter for <code>cards.tcgplayerPurchaseUrl</code>.
     */
    public String getTcgplayerpurchaseurl() {
        return (String) get(63);
    }

    /**
     * Setter for <code>cards.text</code>.
     */
    public void setText(String value) {
        set(64, value);
    }

    /**
     * Getter for <code>cards.text</code>.
     */
    public String getText() {
        return (String) get(64);
    }

    /**
     * Setter for <code>cards.toughness</code>.
     */
    public void setToughness(String value) {
        set(65, value);
    }

    /**
     * Getter for <code>cards.toughness</code>.
     */
    public String getToughness() {
        return (String) get(65);
    }

    /**
     * Setter for <code>cards.type</code>.
     */
    public void setType(String value) {
        set(66, value);
    }

    /**
     * Getter for <code>cards.type</code>.
     */
    public String getType() {
        return (String) get(66);
    }

    /**
     * Setter for <code>cards.types</code>.
     */
    public void setTypes(String value) {
        set(67, value);
    }

    /**
     * Getter for <code>cards.types</code>.
     */
    public String getTypes() {
        return (String) get(67);
    }

    /**
     * Setter for <code>cards.uuid</code>.
     */
    public void setUuid(String value) {
        set(68, value);
    }

    /**
     * Getter for <code>cards.uuid</code>.
     */
    public String getUuid() {
        return (String) get(68);
    }

    /**
     * Setter for <code>cards.variations</code>.
     */
    public void setVariations(String value) {
        set(69, value);
    }

    /**
     * Getter for <code>cards.variations</code>.
     */
    public String getVariations() {
        return (String) get(69);
    }

    /**
     * Setter for <code>cards.watermark</code>.
     */
    public void setWatermark(String value) {
        set(70, value);
    }

    /**
     * Getter for <code>cards.watermark</code>.
     */
    public String getWatermark() {
        return (String) get(70);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CardsRecord
     */
    public CardsRecord() {
        super(Cards.CARDS);
    }

    /**
     * Create a detached, initialised CardsRecord
     */
    public CardsRecord(Integer id, String artist, String bordercolor, String coloridentity, String colorindicator, String colors, Float convertedmanacost, String dueldeck, String edhrecrank, Float faceconvertedmanacost, String flavortext, String frameeffect, String frameeffects, String frameversion, String hand, Integer hasfoil, Integer hasnodecklimit, Integer hasnonfoil, Integer isalternative, Integer isarena, Integer isfullart, Integer ismtgo, Integer isonlineonly, Integer isoversized, Integer ispaper, Integer ispromo, Integer isreprint, Integer isreserved, Integer isstarter, Integer isstoryspotlight, Integer istextless, Integer istimeshifted, String layout, String leadershipskills, String life, String loyalty, String manacost, Integer mcmid, Integer mcmmetaid, String mcmname, Integer mtgarenaid, Integer mtgofoilid, Integer mtgoid, Integer mtgstocksid, Integer multiverseid, String name, String names, String number, String originaltext, String originaltype, String otherfaceids, String power, String printings, String purchaseurls, String rarity, String scryfallid, String scryfallillustrationid, String scryfalloracleid, String setcode, String side, String subtypes, String supertypes, Integer tcgplayerproductid, String tcgplayerpurchaseurl, String text, String toughness, String type, String types, String uuid, String variations, String watermark) {
        super(Cards.CARDS);

        set(0, id);
        set(1, artist);
        set(2, bordercolor);
        set(3, coloridentity);
        set(4, colorindicator);
        set(5, colors);
        set(6, convertedmanacost);
        set(7, dueldeck);
        set(8, edhrecrank);
        set(9, faceconvertedmanacost);
        set(10, flavortext);
        set(11, frameeffect);
        set(12, frameeffects);
        set(13, frameversion);
        set(14, hand);
        set(15, hasfoil);
        set(16, hasnodecklimit);
        set(17, hasnonfoil);
        set(18, isalternative);
        set(19, isarena);
        set(20, isfullart);
        set(21, ismtgo);
        set(22, isonlineonly);
        set(23, isoversized);
        set(24, ispaper);
        set(25, ispromo);
        set(26, isreprint);
        set(27, isreserved);
        set(28, isstarter);
        set(29, isstoryspotlight);
        set(30, istextless);
        set(31, istimeshifted);
        set(32, layout);
        set(33, leadershipskills);
        set(34, life);
        set(35, loyalty);
        set(36, manacost);
        set(37, mcmid);
        set(38, mcmmetaid);
        set(39, mcmname);
        set(40, mtgarenaid);
        set(41, mtgofoilid);
        set(42, mtgoid);
        set(43, mtgstocksid);
        set(44, multiverseid);
        set(45, name);
        set(46, names);
        set(47, number);
        set(48, originaltext);
        set(49, originaltype);
        set(50, otherfaceids);
        set(51, power);
        set(52, printings);
        set(53, purchaseurls);
        set(54, rarity);
        set(55, scryfallid);
        set(56, scryfallillustrationid);
        set(57, scryfalloracleid);
        set(58, setcode);
        set(59, side);
        set(60, subtypes);
        set(61, supertypes);
        set(62, tcgplayerproductid);
        set(63, tcgplayerpurchaseurl);
        set(64, text);
        set(65, toughness);
        set(66, type);
        set(67, types);
        set(68, uuid);
        set(69, variations);
        set(70, watermark);
    }
}
