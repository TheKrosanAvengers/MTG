/*
 * This file is generated by jOOQ.
 */
package org.krosanavengers.mtg.jooq.h2.public_.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.krosanavengers.mtg.jooq.h2.public_.tables.Cards;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardsRecord extends UpdatableRecordImpl<CardsRecord> implements Record7<Long, String, Integer, String, String, Integer, Integer> {

    private static final long serialVersionUID = -598865134;

    /**
     * Setter for <code>PUBLIC.CARDS.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.CARDS.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.CARDS.NAME</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.CARDS.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.CARDS.CMC</code>.
     */
    public void setCmc(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.CARDS.CMC</code>.
     */
    public Integer getCmc() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>PUBLIC.CARDS.COST</code>.
     */
    public void setCost(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.CARDS.COST</code>.
     */
    public String getCost() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.CARDS.IDENTITY</code>.
     */
    public void setIdentity(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.CARDS.IDENTITY</code>.
     */
    public String getIdentity() {
        return (String) get(4);
    }

    /**
     * Setter for <code>PUBLIC.CARDS.POWER</code>.
     */
    public void setPower(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.CARDS.POWER</code>.
     */
    public Integer getPower() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>PUBLIC.CARDS.TOUGHNESS</code>.
     */
    public void setToughness(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>PUBLIC.CARDS.TOUGHNESS</code>.
     */
    public Integer getToughness() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, Integer, String, String, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, Integer, String, String, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Cards.CARDS.ID;
    }

    @Override
    public Field<String> field2() {
        return Cards.CARDS.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Cards.CARDS.CMC;
    }

    @Override
    public Field<String> field4() {
        return Cards.CARDS.COST;
    }

    @Override
    public Field<String> field5() {
        return Cards.CARDS.IDENTITY;
    }

    @Override
    public Field<Integer> field6() {
        return Cards.CARDS.POWER;
    }

    @Override
    public Field<Integer> field7() {
        return Cards.CARDS.TOUGHNESS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getCmc();
    }

    @Override
    public String component4() {
        return getCost();
    }

    @Override
    public String component5() {
        return getIdentity();
    }

    @Override
    public Integer component6() {
        return getPower();
    }

    @Override
    public Integer component7() {
        return getToughness();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getCmc();
    }

    @Override
    public String value4() {
        return getCost();
    }

    @Override
    public String value5() {
        return getIdentity();
    }

    @Override
    public Integer value6() {
        return getPower();
    }

    @Override
    public Integer value7() {
        return getToughness();
    }

    @Override
    public CardsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CardsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public CardsRecord value3(Integer value) {
        setCmc(value);
        return this;
    }

    @Override
    public CardsRecord value4(String value) {
        setCost(value);
        return this;
    }

    @Override
    public CardsRecord value5(String value) {
        setIdentity(value);
        return this;
    }

    @Override
    public CardsRecord value6(Integer value) {
        setPower(value);
        return this;
    }

    @Override
    public CardsRecord value7(Integer value) {
        setToughness(value);
        return this;
    }

    @Override
    public CardsRecord values(Long value1, String value2, Integer value3, String value4, String value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CardsRecord
     */
    public CardsRecord() {
        super(Cards.CARDS);
    }

    /**
     * Create a detached, initialised CardsRecord
     */
    public CardsRecord(Long id, String name, Integer cmc, String cost, String identity, Integer power, Integer toughness) {
        super(Cards.CARDS);

        set(0, id);
        set(1, name);
        set(2, cmc);
        set(3, cost);
        set(4, identity);
        set(5, power);
        set(6, toughness);
    }
}
