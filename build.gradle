buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath("org.jooq:jooq-codegen:3.12.3")
        classpath("org.xerial:sqlite-jdbc:3.30.1")
        classpath('com.h2database:h2:1.4.200')
    }
}


plugins {
    id "de.undercouch.download" version "4.0.4"
    id 'java'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile("com.h2database:h2:1.4.200")
    compile("org.jooq:jooq:3.12.3")
    compile("org.jooq:jooq-codegen:3.12.3")
    compile("org.xerial:sqlite-jdbc:3.30.1")
    compile("org.apache.commons:commons-lang3:3.9")
    runtime 'com.h2database:h2:1.4.200'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}


test {
    useJUnitPlatform()
}

test {
    useJUnitPlatform()
}

//Create MTGJSON JooQ objects
tasks.register("generateSQLITE") {
    doLast {
        def writer = new StringWriter()
        def xml = new groovy.xml.MarkupBuilder(writer)
                .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.12.0.xsd') {
                    jdbc() {
                        driver('org.sqlite.JDBC')
                        url('jdbc:sqlite:AllPrintings.sqlite')
                        user('sa')
                        password('')
                    }
                    generator() {
                        database() {
                        }
                        generate([:]) {
                            pojos true
                            daos true
                        }
                        target() {
                            packageName('com.mtgjson')
                            directory('src/main/java')
                        }
                    }
                }
        org.jooq.codegen.GenerationTool.generate(writer.toString())
    }
}

//Create MTGJSON JooQ objects


tasks.register("generateH2") {
    doLast {
        def writer = new StringWriter()
        def xml = new groovy.xml.MarkupBuilder(writer)
                .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.12.0.xsd') {
                    jdbc() {
                        driver('org.h2.Driver')
                        url('jdbc:h2:file:./mtg')
                        user('sa')
                    }
                    generator() {
                        database() {
                        }
                        target() {
                            packageName('com.cards')
                            directory('src/main/java')
                        }
                    }
                }
        org.jooq.codegen.GenerationTool.generate(writer.toString())
    }
}

task downloadFile(type: Download) {
    src 'https://www.mtgjson.com/files/AllPrintings.sqlite'
    dest projectDir
    overwrite true
}

tasks.build.dependsOn.add(downloadFile)
